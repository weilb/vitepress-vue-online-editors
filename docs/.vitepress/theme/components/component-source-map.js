// 自动生成的组件源码映射表
// 请勿手动修改此文件
export const componentSourceMap = {
  "DemoMap": "<template>\r\n  <div class=\"demo-map-wrapper\">\r\n    <div ref=\"mapContainer\" class=\"demo-map-container\"></div>\r\n    <div v-if=\"error\" class=\"demo-map-error\">{{ error }}</div>\r\n    <div v-if=\"loading\" class=\"demo-map-loading\">地图加载中...</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, onUnmounted, watch } from 'vue'\r\nimport mapboxgl from 'mapbox-gl'\r\n\r\nconst props = withDefaults(defineProps<{\r\n  accessToken?: string\r\n  style?: string\r\n  center?: [number, number]\r\n  zoom?: number\r\n}>(), {\r\n  accessToken: 'pk.eyJ1Ijoid2VpbGlibyIsImEiOiJjbGo3MWVpOXcwMTB2M3J0aHJ6MzRoaXIxIn0.S1a7eZlZDaDlJQZCk8UhTw',\r\n  style: 'mapbox://styles/mapbox/streets-v11',\r\n  center: () => [116.397389, 39.908722],\r\n  zoom: 10\r\n})\r\n\r\nconst mapContainer = ref<HTMLElement | null>(null)\r\nconst error = ref<string>('')\r\nconst loading = ref<boolean>(true)\r\nlet map: mapboxgl.Map | null = null\r\n\r\nonMounted(() => {\r\n  if (!mapContainer.value) {\r\n    error.value = '地图容器未找到'\r\n    loading.value = false\r\n    return\r\n  }\r\n\r\n  try {\r\n    mapboxgl.accessToken = props.accessToken\r\n\r\n    map = new mapboxgl.Map({\r\n      container: mapContainer.value,\r\n      style: props.style,\r\n      center: props.center,\r\n      zoom: props.zoom\r\n    })\r\n\r\n    map.on('load', () => {\r\n      loading.value = false\r\n    })\r\n\r\n    map.on('error', (e) => {\r\n      error.value = `地图加载失败: ${e.error?.message || '未知错误'}`\r\n      loading.value = false\r\n    })\r\n  } catch (err) {\r\n    error.value = `初始化失败: ${err instanceof Error ? err.message : '未知错误'}`\r\n    loading.value = false\r\n  }\r\n})\r\n\r\nonUnmounted(() => {\r\n  if (map) {\r\n    map.remove()\r\n    map = null\r\n  }\r\n})\r\n\r\nwatch(() => props.style, (newStyle) => {\r\n  if (map && newStyle) {\r\n    map.setStyle(newStyle)\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.demo-map-wrapper {\r\n  position: relative;\r\n  width: 100%;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.demo-map-container {\r\n  width: 100%;\r\n  height: 400px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  border: 1px solid #e1e5e9;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.demo-map-error {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: #fee;\r\n  color: #c33;\r\n  padding: 12px 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #fcc;\r\n  z-index: 10;\r\n}\r\n\r\n.demo-map-loading {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: #fff;\r\n  color: #666;\r\n  padding: 12px 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ddd;\r\n  z-index: 10;\r\n}\r\n\r\n\r\n</style> ",
  "DemoMapWithMarker": "<template>\n  <div class=\"demo-map-wrapper\">\n    <div ref=\"mapContainer\" class=\"demo-map-container\"></div>\n    <div v-if=\"error\" class=\"demo-map-error\">{{ error }}</div>\n    <div v-if=\"loading\" class=\"demo-map-loading\">地图加载中...</div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport mapboxgl from 'mapbox-gl'\n\nconst props = withDefaults(defineProps<{\n  accessToken?: string\n  style?: string\n  center?: [number, number]\n  zoom?: number\n}>(), {\n  accessToken: 'pk.eyJ1Ijoid2VpbGlibyIsImEiOiJjbGo3MWVpOXcwMTB2M3J0aHJ6MzRoaXIxIn0.S1a7eZlZDaDlJQZCk8UhTw',\n  style: 'mapbox://styles/mapbox/streets-v11',\n  center: () => [116.397389, 39.908722],\n  zoom: 12\n})\n\nconst mapContainer = ref<HTMLElement | null>(null)\nconst error = ref<string>('')\nconst loading = ref<boolean>(true)\nlet map: mapboxgl.Map | null = null\n\nonMounted(() => {\n  if (!mapContainer.value) {\n    error.value = '地图容器未找到'\n    loading.value = false\n    return\n  }\n  \n  try {\n    mapboxgl.accessToken = props.accessToken\n    \n    map = new mapboxgl.Map({\n      container: mapContainer.value,\n      style: props.style,\n      center: props.center,\n      zoom: props.zoom\n    })\n    \n    map.on('load', () => {\n      // 添加数据源\n      map.addSource('beijing-point', {\n        type: 'geojson',\n        data: {\n          type: 'Feature',\n          geometry: {\n            type: 'Point',\n            coordinates: [116.397389, 39.908722]\n          },\n          properties: {\n            name: '北京'\n          }\n        }\n      })\n\n      // 添加圆形图层\n      map.addLayer({\n        id: 'beijing-circle',\n        type: 'circle',\n        source: 'beijing-point',\n        paint: {\n          'circle-radius': 10,\n          'circle-color': '#007cbf'\n        }\n      })\n\n      // 添加标记\n      const marker = new mapboxgl.Marker()\n        .setLngLat([116.397389, 39.908722])\n        .addTo(map)\n\n      loading.value = false\n    })\n    \n    map.on('error', (e) => {\n      error.value = `地图加载失败: ${e.error?.message || '未知错误'}`\n      loading.value = false\n    })\n\n    // 添加导航控件\n    map.addControl(new mapboxgl.NavigationControl())\n    \n    // 添加缩放控件\n    map.addControl(new mapboxgl.ScaleControl())\n  } catch (err) {\n    error.value = `初始化失败: ${err instanceof Error ? err.message : '未知错误'}`\n    loading.value = false\n  }\n})\n\nonUnmounted(() => {\n  if (map) {\n    map.remove()\n    map = null\n  }\n})\n</script>\n\n<style scoped>\n.demo-map-wrapper {\n  position: relative;\n  width: 100%;\n  margin-bottom: 24px;\n}\n\n.demo-map-container {\n  width: 100%;\n  height: 400px;\n  border-radius: 8px;\n  overflow: hidden;\n  border: 1px solid #e1e5e9;\n  background-color: #f8f9fa;\n}\n\n.demo-map-error {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: #fee;\n  color: #c33;\n  padding: 12px 16px;\n  border-radius: 4px;\n  border: 1px solid #fcc;\n  z-index: 10;\n}\n\n.demo-map-loading {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: #fff;\n  color: #666;\n  padding: 12px 16px;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n  z-index: 10;\n}\n</style>\n"
}
